#set-option -g default-terminal "screen-256color-italic"
#set-option -g default-terminal "xterm-256color"

# set-option -g default-terminal "xterm-256color-italic"
# set-option -ga terminal-overrides ",xterm-256color-italic:Tc"

set-option -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
#set-option -g default-command "tmux rename-window base"
set -g prefix C-a
bind-key a send-prefix
bind-key C-a last-window
unbind-key C-b

# esc key 딜레이를 없애는 tmux 단에서 해줘야할 인자
set -sg escape-time 0
#set -s escape-time 0

#set-option -g allow-rename on
#bind-key C-a send-prefix
# send the prefix to client inside window
#bind-key -n C-s send-prefix

# pane movement
bind-key i command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# neovim 에서의 esc 딜레이를 없애줍니다 
set -sg escape-time 0

bind '"' split-window -c '#{pane_current_path}'
bind '%' split-window -h -c '#{pane_current_path}'
#bind 'c' new-window -c '#{pane_current_path}'
bind 'v' new-window -c '#{pane_current_path}'


# 이옵션이 없어도 원하는대로 동작을 했습니다. copy시작은 <Space>, 종료는 <Enter>이고, 붙여넣기는 C-a-] 였습니다
#set-window-option -g mode-keys vi
#bind-key -T copy-mode-vi v send-keys -X begin-selection
#bind-key -T copy-mode-vi y send-keys -X copy-selection
#bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

set-option -g history-limit 5000
bind-key _ resize-pane -D 2
bind-key + resize-pane -U 2
bind-key j select-pane -D
bind-key k select-pane -U
bind-key h select-pane -L
bind-key l select-pane -R

# Smart pane switching with awareness of vim splits
#is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'

# 아래가 nested tmux vim navigate의 기본으로 되어 있더군요 언제바꾼지 모르겠는데 일단 안되길래
#원래 vim-tmux-navigator 페이지에 나온대로 (https://github.com/christoomey/vim-tmux-navigator)
#is_vim 값을 저대로 해봤습니다
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|vim|ssh|mosh?)(diff)?$"'
#is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|vim|ssh?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

bind -n C-u swap-pane -t 0 \; select-pane -t 0

#bind -n C-x confirm-before "kill-window -t ''" 

# alt + num 으로 윈도우를 쉽게 선택하게 합니다
#bind -n M-0 select-window -t 0
#bind -n M-1 select-window -t 1
#bind -n M-2 select-window -t 2
#bind -n M-3 select-window -t 3
#bind -n M-4 select-window -t 4
#bind -n M-5 select-window -t 5
#bind -n M-6 select-window -t 6
#bind -n M-7 select-window -t 7
#bind -n M-8 select-window -t 8
#bind -n M-9 select-window -t 9

#bind -n C-h select-pane -L
#bind -n C-M-j select-pane -D
#bind -n C-M-k select-pane -U
#bind -n C-l select-pane -R

#bind -r C-h run "tmux select-pane -L"
#bind -r C-j run "tmux select-pane -D"
#bind -r C-k run "tmux select-pane -U"
#bind -r C-l run "tmux select-pane -R"
#bind -r C-\ run "tmux select-pane -l"

# 윈도우 swap 좌우
#bind-key -n C-S-Left swap-window -t -1
#bind-key -n C-S-Right swap-window -t +1
# -d 를 새버전에서는 추가해줘야합니다
bind-key < swap-window -t -1 -d
bind-key > swap-window -t +1 -d

bind | split-window -h
bind - split-window -v
bind u swap-pane -t 0 \; select-pane -t 0
bind r source-file ~/.tmux.conf

set -g status-fg white
#set -g status-bg black
set -g status-bg "#47273c"
#572d46

#set-window-option -g window-status-current-bg red

#set-window-option -g window-status-current-style bg=#1a6e96	#wsl1
set-window-option -g window-status-current-style bg="#c4278b"		#wsl2
#set-window-option -g window-status-current-style bg=red
set-window-option -g mode-keys vi
set-window-option -g automatic-rename

#set-option -g status-utf8 on
#setw -g utf8 on

set-option -g xterm-keys on
setw -g xterm-keys on

#setw -g aggressive-resize off

